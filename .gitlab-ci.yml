# image: /python:3.6-alpine

# variables:
#   PIP_CACHE_DIR: "$CI_PROJECT_DIR/pip-cache"
#   APLICATION_NAME: "simples-nacional"
#   TF_VAR_docker_repo_user: ${DOCKER_READER_USER}
#   TF_VAR_docker_repo_pass: ${DOCKER_READER_PWD}
#   TF_VAR_ci_pipeline_id: ${CI_PIPELINE_ID}
#   TF_VAR_winrm_user: ${WINRM_USER}
#   TF_VAR_winrm_pass: ${WINRM_PASS}
#   SONAR_ARGS: "-Dsonar.host.url=$SONAR_HOST -Dsonar.gitlab.project_id=$CI_PROJECT_ID -Dproject.settings=config-pipeline/sonar-project.properties"
#   SONAR_PREVIEW_ARGS: "-Dsonar.analysis.mode=preview -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME"

# .set terraform:
#   image:
#     name: /hashicorp/terraform:0.11.14
#     entrypoint:
#       - "/usr/bin/env"
#       - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

# .set build_image:
#   image:
#     name: /docker:19.03.2
#   script:
#     - docker login -u fabricioadenir -p $REGISTRY_PASSWORD $REGISTRY_URL
#     - docker build -t $REGISTRY_URL/simples-nacional/$APLICATION_NAME:$IMAGE_TAG . | grep Successfully
#     - docker push $REGISTRY_URL/simples-nacional/$APLICATION_NAME:$IMAGE_TAG | grep 'digest\|repository'
#     - docker rmi -f $REGISTRY_URL/simples-nacional/$APLICATION_NAME:$IMAGE_TAG >/dev/null && echo OK

# stages:
#   - Lint
#   - Compile
#   - Deploy

# Flake8:
#   stage: Lint
#   when: delayed
#   start_in: 5 seconds
#   script:
#     - pip install pip
#     - pip install flake8==3.8.4 # you can also use tox
#     - flake8 --config=config-pipeline/flake8
#   except:
#     variables:
#       - $ONLY_ENVIRONMENT
#       - $CI_COMMIT_TAG

# PycodeStyle8:
#   stage: Lint
#   script:
#     - pip install pip
#     - pip install --upgrade pycodestyle
#     - pycodestyle --config=config-pipeline/pycodestyle .
#   except:
#     variables:
#       - $ONLY_ENVIRONMENT
#       - $CI_COMMIT_TAG

# confirmar-aviso:
#   image: image python compilar
#   stage: Compile
#   script:
#     - pip install -r requirements.txt
#     - python -m compileall -f -q .
#   except:
#     variables:
#       - $ONLY_ENVIRONMENT

# Atdd image:
#   stage: Deploy
#   extends: .set build_image
#   variables:
#     IMAGE_TAG: 'atdd'
#   except:
#     - tags

# Deploy image:
#   stage: Deploy
#   extends: .set build_image
#   variables:
#     IMAGE_TAG: $CI_COMMIT_TAG
#   only:
#     - tags

# Stable image:
#   stage: Deploy
#   extends: .set build_image
#   variables:
#     IMAGE_TAG: 'stable'
#   only:
#     - master
#   except:
#     variables:
#       - $ONLY_IMAGE
#       - $ONLY_ENVIRONMENT